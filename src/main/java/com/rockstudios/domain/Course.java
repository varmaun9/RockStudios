package com.rockstudios.domain;
// Generated Aug 19, 2016 1:16:32 PM by Hibernate Tools 4.0.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Course generated by hbm2java
 */
@Entity
@Table(name = "course", catalog = "rockstudios")
public class Course extends AbstractDomain implements java.io.Serializable {

	private OrganisationBranch organisationBranch;
	private String courseName;
	private String status;
	private String description;
	private Date createdDate;
	private String courseCode;
	private Set<CourseBatch> courseBatches = new HashSet<CourseBatch>(0);
	private Set<CourseProgram> coursePrograms = new HashSet<CourseProgram>(0);

	public Course() {
	}

	public Course(String id, OrganisationBranch organisationBranch, String courseName, String status,
			String courseCode) {
		this.id = id;
		this.organisationBranch = organisationBranch;
		this.courseName = courseName;
		this.status = status;
		this.courseCode = courseCode;
	}

	public Course(String id, OrganisationBranch organisationBranch, String courseName, String status,
			String description, Date createdDate, String courseCode, Set<CourseBatch> courseBatches,
			Set<CourseProgram> coursePrograms) {
		this.id = id;
		this.organisationBranch = organisationBranch;
		this.courseName = courseName;
		this.status = status;
		this.description = description;
		this.createdDate = createdDate;
		this.courseCode = courseCode;
		this.courseBatches = courseBatches;
		this.coursePrograms = coursePrograms;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "organisation_branch_id", nullable = false)
	public OrganisationBranch getOrganisationBranch() {
		return this.organisationBranch;
	}

	public void setOrganisationBranch(OrganisationBranch organisationBranch) {
		this.organisationBranch = organisationBranch;
	}

	@Column(name = "course_name", nullable = false, length = 45)
	public String getCourseName() {
		return this.courseName;
	}

	public void setCourseName(String courseName) {
		this.courseName = courseName;
	}

	@Column(name = "status", nullable = false, length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "description", length = 1000)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "course_code", nullable = false, length = 45)
	public String getCourseCode() {
		return this.courseCode;
	}

	public void setCourseCode(String courseCode) {
		this.courseCode = courseCode;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "course", cascade=CascadeType.ALL)
	public Set<CourseBatch> getCourseBatches() {
		return this.courseBatches;
	}

	public void setCourseBatches(Set<CourseBatch> courseBatches) {
		this.courseBatches = courseBatches;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "course" , cascade=CascadeType.ALL)
	public Set<CourseProgram> getCoursePrograms() {
		return this.coursePrograms;
	}

	public void setCoursePrograms(Set<CourseProgram> coursePrograms) {
		this.coursePrograms = coursePrograms;
	}

}
